{
    "swagger": "2.0",
    "info": {
        "title": "Epitaf API v1 Docs",
        "contact": {
            "name": "Aurèle Oulès",
            "url": "https://www.aureleoules.com",
            "email": "contact@epitaf.fr"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "https://api.epitaf.fr",
    "basePath": "/v1",
    "paths": {
        "/classes": {
            "get": {
                "description": "Get list of all registered classes",
                "tags": [
                    "classes"
                ],
                "summary": "Get classes",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get tasks",
                "tags": [
                    "tasks"
                ],
                "summary": "Get tasks",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error\" \"Server error"
                    }
                }
            },
            "post": {
                "description": "Create a new task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/tasks/{short_id}": {
            "get": {
                "description": "Get a specific task",
                "tags": [
                    "tasks"
                ],
                "summary": "Get task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "short_id",
                        "name": "short_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error\" \"Server error"
                    }
                }
            },
            "put": {
                "description": "Edit a specific task",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "short_id",
                        "name": "short_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Delete a specific task",
                "tags": [
                    "tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "short_id",
                        "name": "short_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/tasks/{short_id}/complete": {
            "post": {
                "description": "Mark a specific task as completed",
                "tags": [
                    "tasks"
                ],
                "summary": "Complete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "short_id",
                        "name": "short_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "description": "Mark a specific task as uncompleted",
                "tags": [
                    "tasks"
                ],
                "summary": "Uncomplete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "short_id",
                        "name": "short_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/authenticate": {
            "post": {
                "description": "Build Microsoft oauth url",
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate URL",
                "parameters": [
                    {
                        "default": "https://www.epitaf.fr/callback",
                        "description": "redirect_uri",
                        "name": "redirect_uri",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Not acceptable"
                    }
                }
            }
        },
        "/users/calendar": {
            "get": {
                "description": "Get user calendar",
                "tags": [
                    "users"
                ],
                "summary": "Get calendar",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error\" \"Server error"
                    }
                }
            }
        },
        "/users/callback": {
            "post": {
                "description": "Authenticate user and return JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "OAuth Callback",
                "parameters": [
                    {
                        "description": "code",
                        "name": "code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "redirect_uri",
                        "name": "redirect_uri",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "Retrieve data about current user",
                "tags": [
                    "users"
                ],
                "summary": "Get self",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "406": {
                        "description": "Not acceptable"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/zeus/feed/{group_id}": {
            "get": {
                "description": "Get Zeus ICS feed",
                "tags": [
                    "zeus"
                ],
                "summary": "Get Zeus ICS feed",
                "parameters": [
                    {
                        "description": "group_id",
                        "name": "group_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "406": {
                        "description": "Not acceptable"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Task": {
            "type": "object",
            "properties": {
                "class": {
                    "description": "Class",
                    "$ref": "#/definitions/nulltype.NullString"
                },
                "completed": {
                    "type": "boolean"
                },
                "completed_at": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "created_by_login": {
                    "description": "Meta",
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "members": {
                    "description": "Students",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "promotion": {
                    "description": "Promotion",
                    "$ref": "#/definitions/nulltype.NullInt64"
                },
                "region": {
                    "$ref": "#/definitions/nulltype.NullString"
                },
                "semester": {
                    "$ref": "#/definitions/nulltype.NullString"
                },
                "short_id": {
                    "description": "Meta",
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "title": {
                    "description": "Body",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "updated_by_login": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "nulltype.NullInt64": {
            "type": "object"
        },
        "nulltype.NullString": {
            "type": "object"
        }
    }
}