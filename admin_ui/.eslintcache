[{"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/components/Navbar/index.tsx":"1","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Group/index.tsx":"2","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/groups.ts":"3","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/Router.tsx":"4","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Tasks/index.tsx":"5","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Groups/index.tsx":"6","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Users/index.tsx":"7","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/index.tsx":"8","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/utils/index.ts":"9","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Login/index.tsx":"10","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/client.ts":"11","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/reportWebVitals.ts":"12","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/http.ts":"13"},{"size":1997,"mtime":1616885127007,"results":"14","hashOfConfig":"15"},{"size":9691,"mtime":1616888768269,"results":"16","hashOfConfig":"15"},{"size":1900,"mtime":1616875592395,"results":"17","hashOfConfig":"15"},{"size":1379,"mtime":1616884794567,"results":"18","hashOfConfig":"15"},{"size":3736,"mtime":1616889065592,"results":"19","hashOfConfig":"15"},{"size":399,"mtime":1616692745219,"results":"20","hashOfConfig":"15"},{"size":3803,"mtime":1616884918380,"results":"21","hashOfConfig":"15"},{"size":701,"mtime":1616887543236,"results":"22","hashOfConfig":"15"},{"size":1175,"mtime":1616692434211,"results":"23","hashOfConfig":"15"},{"size":1388,"mtime":1616680834674,"results":"24","hashOfConfig":"15"},{"size":161,"mtime":1616873409263,"results":"25","hashOfConfig":"15"},{"size":417,"mtime":1616647829647,"results":"26","hashOfConfig":"15"},{"size":279,"mtime":1616647829675,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"28745v",{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/components/Navbar/index.tsx",["63","64","65"],"import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport { useGlobal } from 'reactn';\nimport { Dropdown, Icon, IconButton, Nav, Sidenav } from 'rsuite';\nimport { ReactComponent as UserProfile } from '../../assets/svg/user_profile.svg';\nimport Client from '../../services/client';\nimport { GlobalState } from '../../types/global_state';\nimport styles from './navbar.module.scss';\nimport {logout} from '../../utils';\n\ntype Props = {};\nexport default withRouter((props: Props) => {\n\tconst { t } = useTranslation();\n\tconst { pathname } = useLocation();\n\n\tconst routes = [\n\t\t{\n\t\t\tname: t('Dashboard'),\n\t\t\tpath: '/',\n\t\t\ticon: <Icon icon=\"dashboard\" />,\n\t\t},\n\t\t{\n\t\t\tname: t('Tasks'),\n\t\t\tpath: '/tasks',\n\t\t\ticon: <Icon icon=\"task\" />,\n\t\t},\n\t\t{\n\t\t\tname: t('Users'),\n\t\t\tpath: '/users',\n\t\t\ticon: <Icon icon=\"user\" />,\n\t\t},\n\t\t{\n\t\t\tname: t('Groups'),\n\t\t\tpath: '/groups',\n\t\t\ticon: <Icon icon=\"group\" />,\n\t\t},\n\t];\n\n\tconst [user, setUser] = useGlobal<GlobalState>('user');\n\tuseEffect(() => {\n\t\tClient.Admins.me()\n\t\t\t.then((u) => {\n\t\t\t\tsetUser(u);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.navbar}>\n\t\t\t<Sidenav\n\t\t\t\tstyle={{ height: '100%' }}\n\t\t\t\tdefaultOpenKeys={['3', '4']}\n\t\t\t\tactiveKey={pathname}\n\t\t\t>\n\t\t\t\t<Sidenav.Body>\n\t\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t\t<UserProfile />\n\n\t\t\t\t\t\t<h4>{t('Welcome back')},</h4>\n\t\t\t\t\t\t<h3>{user?.name}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Nav className={styles.routes}>\n\t\t\t\t\t\t{routes.map((r, i) => (\n\t\t\t\t\t\t\t<Nav.Item\n\t\t\t\t\t\t\t\tkey={r.path}\n\t\t\t\t\t\t\t\tcomponentClass={Link}\n\t\t\t\t\t\t\t\tto={r.path}\n\t\t\t\t\t\t\t\teventKey={r.path}\n\t\t\t\t\t\t\t\ticon={r.icon}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{r.name}\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Nav>\n\t\t\t\t</Sidenav.Body>\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={logout}\n\t\t\t\t\tstyle={{marginTop: 'auto'}} \n\t\t\t\t\tcircle \n\t\t\t\t\tcolor=\"red\" \n\t\t\t\t\tappearance='subtle' \n\t\t\t\t\ticon={<Icon icon='sign-out' />}\n\t\t\t\t/>\n\t\t\t</Sidenav>\n\t\t</div>\n\t);\n});\n",["66","67","68","69","70","71","72"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Group/index.tsx",["73","74","75","76","77","78","79","80","81","82","83"],"import { useEffect, useState } from 'reactn';\nimport {\n\tButton,\n\tCheckPicker,\n\tControlLabel,\n\tForm,\n\tFormControl,\n\tFormGroup,\n\tHelpBlock,\n\tIcon,\n\tIconButton,\n\tModal,\n\tSelectPicker,\n\tTable,\n} from 'rsuite';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router';\nimport moment from 'moment';\nimport Client from '../../services/client';\nimport { User } from '../../types/user';\nimport { SearchQuery } from '../../types/search_query';\nimport { Group as GroupT } from '../../types/group';\nimport styles from './group.module.scss';\nimport history from '../../history';\nimport { Subject } from '../../types/subject';\n\nconst { Column, HeaderCell, Cell, Pagination } = Table;\n\nexport default function Group(props: any) {\n\tconst { t } = useTranslation();\n\n\tenum Tab {\n\t\tUsers = 'users',\n\t\tSubjects = 'subjects',\n\t\tSettings = 'settings'\n\t}\n\n\tconst tabs = [\n\t\t{\n\t\t\tname: t('Subjects'),\n\t\t\ttab: Tab.Subjects,\n\t\t},\n\t\t{\n\t\t\tname: t('Users'),\n\t\t\ttab: Tab.Users,\n\t\t},\n\t\t{\n\t\t\tname: t('Settings'),\n\t\t\ttab: Tab.Settings,\n\t\t},\n\t];\n\n\tconst { tab } = useParams<any>();\n\tconst [activeTab, setTab] = useState<Tab>(tab);\n\t\n\tconst [group, setGroup] = useState<GroupT | null>(null);\n\t\n\tuseEffect(() => {\n\t\tsetTab(tab || Tab.Subjects);\n\t}, [tab]);\n\t\n\n\tuseEffect(() => {\n\t\tfetchGroup();\n\t}, []);\n\n\tfunction fetchGroup() {\n\t\tClient.Groups.get(props.match.params.id)\n\t\t\t.then((g) => {\n\t\t\t\tsetGroup(g);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<div className={['page', styles.group].join(' ')}>\n\t\t\t<h3>{group?.name}</h3>\n\t\t\t<div className={styles.tabs}>\n\t\t\t\t{tabs.map((tab, i) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={tab.name}\n\t\t\t\t\t\ttabIndex={i}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thistory.push(`/groups/${props.match.params.id}/${tab.tab}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tclassName={[\n\t\t\t\t\t\t\tstyles.tab,\n\t\t\t\t\t\t\ttab.tab === activeTab ? styles.active : '',\n\t\t\t\t\t\t].join(' ')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>{tab.name}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t{(group && activeTab === Tab.Subjects) && <SubjectsTab \n\t\t\t\tsubjects={group.subjects!}\n\t\t\t\tfetchGroup={fetchGroup} \n\t\t\t/>}\n\t\t\t{(group && activeTab === Tab.Users) && <UsersTab \n\t\t\t\tusers={group.users!} \n\t\t\t\tfetchGroup={fetchGroup} \n\t\t\t/>}\n\t\t</div>\n\t);\n}\n\nfunction SubjectsTab(props: {subjects: Array<Subject>, fetchGroup: () => void}) {\n\n\tconst { t } = useTranslation();\n\tconst [createModal, setCreateModal] = useState<boolean>(false);\n\tconst [subject, setSubject] = useState<Subject>({});\n\tconst [confirmArchive, setConfirmArchive] = useState<boolean>(false);\n\tconst [subjectToArchive, setSubjectToArchive] = useState<string>();\n\n\tconst {id} = useParams<any>();\n\n\tfunction addSubject() {\n\t\tif (subject.id) {\n\t\t\tClient.Groups.updateSubject(id, subject.id, subject).then(() => {\n\t\t\t\tprops.fetchGroup();\n\t\t\t\tsetCreateModal(false);\t\n\t\t\t}).catch(err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t} else {\n\t\t\tClient.Groups.addSubject(id, subject).then(() => {\n\t\t\t\tprops.fetchGroup();\n\t\t\t\tsetCreateModal(false);\n\t\t\t}).catch(err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction archiveSubject() {\n\t\tClient.Groups.archiveSubject(id, subjectToArchive!).then(() => {\n\t\t\tconsole.log('ok');\n\t\t\tprops.fetchGroup();\n\t\t\tsetConfirmArchive(false);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\n\tfunction editSubject(s: Subject) {\n\t\tsetSubject(s);\n\t\tsetCreateModal(true);\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetCreateModal(true);\n\t\t\t\t}}\n\t\t\t\tstyle={{marginBottom: 15}}\n\t\t\t\tappearance=\"primary\"\n\t\t\t>\n\t\t\t\t{t('Add subject')}\n\t\t\t</Button>\n\t\t\t<Table\n\t\t\t\theight={400}\n\t\t\t\tdata={props.subjects}\n\t\t\t>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Name')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"name\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={100}>\n\t\t\t\t\t<HeaderCell>{t('Color')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"color\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={100}>\n\t\t\t\t\t<HeaderCell>{t('Icon')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"icon_url\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>\n\t\t\t\t\t\t{t('Created at')}\n\t\t\t\t\t</HeaderCell>\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t{(rowData: any) =>\n\t\t\t\t\t\t\tmoment(rowData.created_at).format(\n\t\t\t\t\t\t\t\t'MMM Do YYYY HH:mm:ss'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>\n\t\t\t\t\t\t{t('Updated at')}\n\t\t\t\t\t</HeaderCell>\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t{(rowData: any) =>\n\t\t\t\t\t\t\tmoment(rowData.updated_at).format(\n\t\t\t\t\t\t\t\t'MMM Do YYYY HH:mm:ss'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column>\n\t\t\t\t<Column width={150} fixed=\"right\">\n\t\t\t\t\t<HeaderCell>{t('Action')}</HeaderCell>\n\t\t\t\t\t<Cell style={{display: 'flex', alignItems: 'center'}}>\n\t\t\t\t\t\t{(rowData: any) => \n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\tonClick={() => editSubject((rowData as Subject))}\n\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\tappearance='link'\n\t\t\t\t\t\t\t\t>{t('Edit')}\n\t\t\t\t\t\t\t\t</Button> | {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSubjectToArchive(rowData.id);\n\t\t\t\t\t\t\t\t\t\tsetConfirmArchive(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\tappearance='link'\n\t\t\t\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\t\t\t>{t('Archive')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column>\n\t\t\t</Table>\n\n\t\t\t<Modal show={confirmArchive} close={() => setConfirmArchive(false)} onHide={() => setConfirmArchive(false)} size=\"xs\">\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\ticon=\"remind\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: '#ffb300',\n\t\t\t\t\t\t\tfontSize: 24,\n\t\t\t\t\t\t\tmarginRight: 5\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{t('Are you sure you want to archive this subject?')}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button color='red' onClick={archiveSubject} appearance=\"primary\">\n\t\t\t\t\t\t{t('Archive')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setConfirmArchive(false)} appearance=\"subtle\">\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t\t\n\n\t\t\t<Modal\n\t\t\t\tshow={createModal}\n\t\t\t\tclose={() => setCreateModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateModal(false)}\n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Add subject')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={addSubject}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Name')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tplaceholder={t('Name')} \n\t\t\t\t\t\t\t\tonChange={v => setSubject(s => ({...s, title: v}))}\n\t\t\t\t\t\t\t\tvalue={subject.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Color')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\tname=\"color\" \n\t\t\t\t\t\t\t\tplaceholder={t('Color')} \n\t\t\t\t\t\t\t\tonChange={v => setSubject(s => ({...s, color: v}))}\n\t\t\t\t\t\t\t\tvalue={subject.color}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Icon')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\tname=\"icon\" \n\t\t\t\t\t\t\t\tplaceholder={t('Icon')} \n\t\t\t\t\t\t\t\tonChange={v => setSubject(s => ({...s, icon_url: v}))}\n\t\t\t\t\t\t\t\tvalue={subject.icon_url}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={addSubject}\n\t\t\t\t\t\tdisabled={!subject.name}\n\t\t\t\t\t>\n\t\t\t\t\t\t{subject.id ? t('Update') : t('Add subject')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateModal(false)} appearance=\"subtle\">\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\n\nfunction UsersTab(props: {users: Array<User>, fetchGroup: () => void}) {\n\n\tconst { t } = useTranslation();\n\n\tconst {id} = useParams<any>();\n\t\n\tconst [createModal, setCreateModal] = useState<boolean>(false);\n\tconst [searchedUsers, setUsers] = useState<Array<User>>(new Array<User>());\n\tconst [userIds, setUserIds] = useState<Array<string>>(new Array<string>());\n\n\tfunction addUser() {\n\t\tClient.Groups.addUsers(id, userIds.join(','))\n\t\t\t.then(() => {\n\t\t\t\tprops.fetchGroup();\n\t\t\t\tsetCreateModal(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}\n\n\n\n\tfunction searchUsers(q?: string) {\n\t\tClient.Users.list({ query: q, exclude_group: id })\n\t\t\t.then((users) => {\n\t\t\t\tsetUsers(users);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetUserIds([]);\n\t\t\t\t\tsetCreateModal(true);\n\t\t\t\t}}\n\t\t\t\tstyle={{marginBottom: 15}}\n\t\t\t\tappearance=\"primary\"\n\t\t\t>\n\t\t\t\t{t('Add user')}\n\t\t\t</Button>\n\t\t\t<Table\n\t\t\t\theight={400}\n\t\t\t\tdata={props.users}\n\t\t\t>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Name')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"name\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Login')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"login\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={300}>\n\t\t\t\t\t<HeaderCell>{t('Email')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"email\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={120} fixed=\"right\">\n\t\t\t\t\t<HeaderCell>{t('Action')}</HeaderCell>\n\t\t\t\t\t<Cell>{(rowData: any) => <span>yo</span>}</Cell>\n\t\t\t\t</Column>\n\t\t\t</Table>\n\n\t\t\t<Modal\n\t\t\t\tshow={createModal}\n\t\t\t\tclose={() => setCreateModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateModal(false)}\n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Add users')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={addUser}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Select users')}</ControlLabel>\n\t\t\t\t\t\t\t<CheckPicker\n\t\t\t\t\t\t\t\tdata={searchedUsers.map((u) => ({ label: u.name, value: u.id }))}\n\t\t\t\t\t\t\t\tvalue={userIds}\n\t\t\t\t\t\t\t\tonChange={(v) => setUserIds(v)}\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\tonOpen={searchUsers}\n\t\t\t\t\t\t\t\tonSearch={searchUsers}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={addUser}\n\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Add users')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateModal(false)} appearance=\"subtle\">\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/groups.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/Router.tsx",[],["84","85","86","87","88","89","90"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Tasks/index.tsx",["91","92","93","94","95","96","97","98","99","100"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Groups/index.tsx",["101"],"import { useEffect } from 'react';\nimport Client from '../../services/client';\nimport GroupTree from '../../views/GroupTree';\n\nexport default function Groups(props: any) {\n\n\tuseEffect(() => {\n\t\tClient.Groups.tree().then(tree => {\n\t\t\tconsole.log(tree);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}, []);\n\t\n\treturn (\n\t\t<div style={{width: 'calc(100% - 300px)'}}>\n\t\t\t<GroupTree />\n\t\t</div>\n\t);\n}",["102","103","104","105","106","107","108"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Users/index.tsx",["109","110","111","112"],"import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'reactn';\nimport { Button, ControlLabel, Form, FormControl, FormGroup, HelpBlock, Modal, Table } from 'rsuite';\nimport Client from '../../services/client';\nimport { User } from '../../types/user';\n\nconst { Column, HeaderCell, Cell, Pagination } = Table;\n\nexport default function Users(props: any) {\n\tconst { t } = useTranslation();\n\n\tconst [users, setUsers] = useState<Array<User>>(new Array<User>());\n\tconst [user, setUser] = useState<User>({});\n\tconst [createUserModal, setCreateUserModal] = useState<boolean>(false);\n\t\n\tuseEffect(() => {\n\t\tfetchUsers();\n\t}, []);\n\n\tfunction fetchUsers() {\n\t\tClient.Users.list().then(u => {\n\t\t\tsetUsers(u);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\n\tfunction createUser() {\n\t\tClient.Users.create(user.name!, user.email!, user.login!, user.password).then(id => {\n\t\t\tconsole.log(id);\n\t\t\tfetchUsers();\n\t\t\tsetCreateUserModal(false);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\t\n\treturn (\n\t\t<div className='page'>\n\t\t\t<div className='header-action'>\n\t\t\t\t<h3>{t('Users')}</h3>\n\t\t\t\t<Button onClick={() => setCreateUserModal(true)} appearance=\"primary\">\n\t\t\t\t\t{t('Create user')}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Table\n\t\t\t\theight={400}\n\t\t\t\tdata={users}\n\t\t\t\tonRowClick={data => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Name')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"name\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Login')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"login\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Email')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"email\" />\n\t\t\t\t</Column>\n\t\t\t\t{/* <Column width={120} fixed=\"right\">\n\t\t\t\t\t<HeaderCell>Action</HeaderCell>\n\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t{rowData => {\n\t\t\t\t\t\t\tfunction handleAction() {\n\t\t\t\t\t\t\t\talert(`id:${rowData.id}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column> */}\n\t\t\t</Table>\n\n\t\t\t<Modal\n\t\t\t\tshow={createUserModal}\n\t\t\t\tclose={() => setCreateUserModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateUserModal(false)} \n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Create user')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={createUser}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Name')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={user.name}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, name: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Name')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Login')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={user.login}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, login: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Login')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Email')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tvalue={user.email}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, email: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Email')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Password')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, password: v}))}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder={t('Leave empty for a random password')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={createUser}\n\t\t\t\t\t\tdisabled={!user.name || !user.login}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Create user')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateUserModal(false)} appearance=\"subtle\">{t('Cancel')}</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}",["113","114","115","116","117","118","119"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/index.tsx",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/utils/index.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Login/index.tsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Button, ControlLabel, Form, FormControl, FormGroup, HelpBlock, Input } from 'rsuite';\nimport { ReactComponent as Logo } from '../../assets/svg/bitcoin.svg';\nimport Client from '../../services/client';\nimport styles from './login.module.scss';\n\nexport default function Setup() {\n\tconst { t } = useTranslation();\n\n\tconst [email, setEmail] = useState<string>('');\n\tconst [password, setPassword] = useState<string>('');\n\n\tfunction authenticateUser() {\n\t\tClient.Admins.authenticate(email, password)\n\t\t\t.then(() => {\n\t\t\t\twindow.location.href = '/';\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\ttoast(t('Incorrect username / password.'), {\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<div className={styles.login}>\n\t\t\t<h1>{t('Login')}</h1>\n\t\t\t<Form style={{marginTop: 25}} onSubmit={authenticateUser}>\n\t\t\t\t<Input onChange={v => setEmail(v)} style={{marginBottom: 15}} placeholder={t('Username')} name=\"name\" type=\"email\" />\n\t\t\t\t<Input onChange={v => setPassword(v)} style={{marginBottom: 15}} placeholder={t('Password')} name=\"password\" type=\"password\" />\n\n\t\t\t\t<Button type=\"submit\" appearance=\"primary\">{t('Login')}</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/client.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/reportWebVitals.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/http.ts",[],{"ruleId":"134","severity":1,"message":"135","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":18},{"ruleId":"138","severity":1,"message":"135","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":50,"column":5,"nodeType":"141","endLine":50,"endColumn":7,"suggestions":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"134","severity":1,"message":"157","line":11,"column":2,"nodeType":"136","messageId":"137","endLine":11,"endColumn":12},{"ruleId":"138","severity":1,"message":"157","line":11,"column":2,"nodeType":"136","messageId":"137","endLine":11,"endColumn":12},{"ruleId":"134","severity":1,"message":"158","line":13,"column":2,"nodeType":"136","messageId":"137","endLine":13,"endColumn":14},{"ruleId":"138","severity":1,"message":"158","line":13,"column":2,"nodeType":"136","messageId":"137","endLine":13,"endColumn":14},{"ruleId":"134","severity":1,"message":"159","line":21,"column":10,"nodeType":"136","messageId":"137","endLine":21,"endColumn":21},{"ruleId":"138","severity":1,"message":"159","line":21,"column":10,"nodeType":"136","messageId":"137","endLine":21,"endColumn":21},{"ruleId":"134","severity":1,"message":"160","line":27,"column":35,"nodeType":"136","messageId":"137","endLine":27,"endColumn":45},{"ruleId":"138","severity":1,"message":"160","line":27,"column":35,"nodeType":"136","messageId":"137","endLine":27,"endColumn":45},{"ruleId":"139","severity":1,"message":"161","line":60,"column":5,"nodeType":"141","endLine":60,"endColumn":10,"suggestions":"162"},{"ruleId":"139","severity":1,"message":"163","line":65,"column":5,"nodeType":"141","endLine":65,"endColumn":7,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":141,"column":4,"nodeType":"167","messageId":"168","endLine":141,"endColumn":15},{"ruleId":"143","replacedBy":"169"},{"ruleId":"145","replacedBy":"170"},{"ruleId":"147","replacedBy":"171"},{"ruleId":"149","replacedBy":"172"},{"ruleId":"151","replacedBy":"173"},{"ruleId":"153","replacedBy":"174"},{"ruleId":"155","replacedBy":"175"},{"ruleId":"134","severity":1,"message":"176","line":6,"column":2,"nodeType":"136","messageId":"137","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"176","line":6,"column":2,"nodeType":"136","messageId":"137","endLine":6,"endColumn":13},{"ruleId":"134","severity":1,"message":"177","line":12,"column":2,"nodeType":"136","messageId":"137","endLine":12,"endColumn":6},{"ruleId":"138","severity":1,"message":"177","line":12,"column":2,"nodeType":"136","messageId":"137","endLine":12,"endColumn":6},{"ruleId":"134","severity":1,"message":"157","line":13,"column":2,"nodeType":"136","messageId":"137","endLine":13,"endColumn":12},{"ruleId":"138","severity":1,"message":"157","line":13,"column":2,"nodeType":"136","messageId":"137","endLine":13,"endColumn":12},{"ruleId":"134","severity":1,"message":"158","line":15,"column":2,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"138","severity":1,"message":"158","line":15,"column":2,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"134","severity":1,"message":"160","line":22,"column":35,"nodeType":"136","messageId":"137","endLine":22,"endColumn":45},{"ruleId":"138","severity":1,"message":"160","line":22,"column":35,"nodeType":"136","messageId":"137","endLine":22,"endColumn":45},{"ruleId":"165","severity":1,"message":"166","line":9,"column":4,"nodeType":"167","messageId":"168","endLine":9,"endColumn":15},{"ruleId":"143","replacedBy":"178"},{"ruleId":"145","replacedBy":"179"},{"ruleId":"147","replacedBy":"180"},{"ruleId":"149","replacedBy":"181"},{"ruleId":"151","replacedBy":"182"},{"ruleId":"153","replacedBy":"183"},{"ruleId":"155","replacedBy":"184"},{"ruleId":"134","severity":1,"message":"160","line":8,"column":35,"nodeType":"136","messageId":"137","endLine":8,"endColumn":45},{"ruleId":"138","severity":1,"message":"160","line":8,"column":35,"nodeType":"136","messageId":"137","endLine":8,"endColumn":45},{"ruleId":"165","severity":1,"message":"166","line":31,"column":4,"nodeType":"167","messageId":"168","endLine":31,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":51,"column":6,"nodeType":"167","messageId":"168","endLine":51,"endColumn":17},{"ruleId":"143","replacedBy":"185"},{"ruleId":"145","replacedBy":"186"},{"ruleId":"147","replacedBy":"187"},{"ruleId":"149","replacedBy":"188"},{"ruleId":"151","replacedBy":"189"},{"ruleId":"153","replacedBy":"190"},{"ruleId":"155","replacedBy":"191"},{"ruleId":"134","severity":1,"message":"192","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":23},{"ruleId":"138","severity":1,"message":"192","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":23},{"ruleId":"134","severity":1,"message":"193","line":3,"column":17,"nodeType":"136","messageId":"137","endLine":3,"endColumn":31},{"ruleId":"138","severity":1,"message":"193","line":3,"column":17,"nodeType":"136","messageId":"137","endLine":3,"endColumn":31},{"ruleId":"134","severity":1,"message":"194","line":5,"column":18,"nodeType":"136","messageId":"137","endLine":5,"endColumn":30},{"ruleId":"138","severity":1,"message":"194","line":5,"column":18,"nodeType":"136","messageId":"137","endLine":5,"endColumn":30},{"ruleId":"134","severity":1,"message":"195","line":5,"column":38,"nodeType":"136","messageId":"137","endLine":5,"endColumn":49},{"ruleId":"138","severity":1,"message":"195","line":5,"column":38,"nodeType":"136","messageId":"137","endLine":5,"endColumn":49},{"ruleId":"134","severity":1,"message":"196","line":5,"column":51,"nodeType":"136","messageId":"137","endLine":5,"endColumn":60},{"ruleId":"138","severity":1,"message":"196","line":5,"column":51,"nodeType":"136","messageId":"137","endLine":5,"endColumn":60},{"ruleId":"134","severity":1,"message":"197","line":5,"column":62,"nodeType":"136","messageId":"137","endLine":5,"endColumn":71},{"ruleId":"138","severity":1,"message":"197","line":5,"column":62,"nodeType":"136","messageId":"137","endLine":5,"endColumn":71},{"ruleId":"134","severity":1,"message":"198","line":6,"column":28,"nodeType":"136","messageId":"137","endLine":6,"endColumn":32},{"ruleId":"138","severity":1,"message":"198","line":6,"column":28,"nodeType":"136","messageId":"137","endLine":6,"endColumn":32},"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["199"],"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"lines-around-directive",["202"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'IconButton' is defined but never used.","'SelectPicker' is defined but never used.","'SearchQuery' is defined but never used.","'Pagination' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Tab.Subjects'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'fetchGroup'. Either include it or remove the dependency array.",["204"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["200"],["201"],["202"],[],[],[],[],"'CheckPicker' is defined but never used.","'Icon' is defined but never used.",["200"],["201"],["202"],[],[],[],[],["200"],["201"],["202"],[],[],[],[],"'useRef' is defined but never used.","'ToastContainer' is defined but never used.","'ControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'HelpBlock' is defined but never used.","'Logo' is defined but never used.",{"desc":"205","fix":"206"},"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [setUser]",{"range":"211","text":"212"},"Update the dependencies array to be: [Tab.Subjects, tab]",{"range":"213","text":"214"},"Update the dependencies array to be: [fetchGroup]",{"range":"215","text":"216"},[1193,1195],"[setUser]",[1245,1250],"[Tab.Subjects, tab]",[1295,1297],"[fetchGroup]"]