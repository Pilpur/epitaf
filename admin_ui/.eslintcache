[{"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/components/Navbar/index.tsx":"1","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Group/index.tsx":"2","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/groups.ts":"3","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/Router.tsx":"4","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Tasks/index.tsx":"5","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Groups/index.tsx":"6","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Users/index.tsx":"7","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/index.tsx":"8","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/utils/index.ts":"9","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Login/index.tsx":"10","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/client.ts":"11","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/reportWebVitals.ts":"12","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/http.ts":"13","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/components/FilterView/index.tsx":"14","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/views/GroupTree/index.tsx":"15","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/subjects.ts":"16","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/tasks.ts":"17"},{"size":1997,"mtime":1616885127007,"results":"18","hashOfConfig":"19"},{"size":9678,"mtime":1616979352269,"results":"20","hashOfConfig":"21"},{"size":1162,"mtime":1616978491865,"results":"22","hashOfConfig":"21"},{"size":1379,"mtime":1616884794567,"results":"23","hashOfConfig":"19"},{"size":6343,"mtime":1616979422105,"results":"24","hashOfConfig":"21"},{"size":399,"mtime":1616692745219,"results":"25","hashOfConfig":"19"},{"size":3803,"mtime":1616884918380,"results":"26","hashOfConfig":"19"},{"size":701,"mtime":1616887543236,"results":"27","hashOfConfig":"19"},{"size":1175,"mtime":1616692434211,"results":"28","hashOfConfig":"19"},{"size":1388,"mtime":1616680834674,"results":"29","hashOfConfig":"19"},{"size":244,"mtime":1616978480825,"results":"30","hashOfConfig":"21"},{"size":417,"mtime":1616647829647,"results":"31","hashOfConfig":"19"},{"size":279,"mtime":1616647829675,"results":"32","hashOfConfig":"19"},{"size":878,"mtime":1616885734497,"results":"33","hashOfConfig":"19"},{"size":4996,"mtime":1616944505997,"results":"34","hashOfConfig":"21"},{"size":1080,"mtime":1616979127857,"results":"35","hashOfConfig":"21"},{"size":631,"mtime":1616979316521,"results":"36","hashOfConfig":"21"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"28745v",{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"ffhzyj",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/components/Navbar/index.tsx",["82","83","84"],"import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport { useGlobal } from 'reactn';\nimport { Dropdown, Icon, IconButton, Nav, Sidenav } from 'rsuite';\nimport { ReactComponent as UserProfile } from '../../assets/svg/user_profile.svg';\nimport Client from '../../services/client';\nimport { GlobalState } from '../../types/global_state';\nimport styles from './navbar.module.scss';\nimport {logout} from '../../utils';\n\ntype Props = {};\nexport default withRouter((props: Props) => {\n\tconst { t } = useTranslation();\n\tconst { pathname } = useLocation();\n\n\tconst routes = [\n\t\t{\n\t\t\tname: t('Dashboard'),\n\t\t\tpath: '/',\n\t\t\ticon: <Icon icon=\"dashboard\" />,\n\t\t},\n\t\t{\n\t\t\tname: t('Tasks'),\n\t\t\tpath: '/tasks',\n\t\t\ticon: <Icon icon=\"task\" />,\n\t\t},\n\t\t{\n\t\t\tname: t('Users'),\n\t\t\tpath: '/users',\n\t\t\ticon: <Icon icon=\"user\" />,\n\t\t},\n\t\t{\n\t\t\tname: t('Groups'),\n\t\t\tpath: '/groups',\n\t\t\ticon: <Icon icon=\"group\" />,\n\t\t},\n\t];\n\n\tconst [user, setUser] = useGlobal<GlobalState>('user');\n\tuseEffect(() => {\n\t\tClient.Admins.me()\n\t\t\t.then((u) => {\n\t\t\t\tsetUser(u);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className={styles.navbar}>\n\t\t\t<Sidenav\n\t\t\t\tstyle={{ height: '100%' }}\n\t\t\t\tdefaultOpenKeys={['3', '4']}\n\t\t\t\tactiveKey={pathname}\n\t\t\t>\n\t\t\t\t<Sidenav.Body>\n\t\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t\t<UserProfile />\n\n\t\t\t\t\t\t<h4>{t('Welcome back')},</h4>\n\t\t\t\t\t\t<h3>{user?.name}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Nav className={styles.routes}>\n\t\t\t\t\t\t{routes.map((r, i) => (\n\t\t\t\t\t\t\t<Nav.Item\n\t\t\t\t\t\t\t\tkey={r.path}\n\t\t\t\t\t\t\t\tcomponentClass={Link}\n\t\t\t\t\t\t\t\tto={r.path}\n\t\t\t\t\t\t\t\teventKey={r.path}\n\t\t\t\t\t\t\t\ticon={r.icon}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{r.name}\n\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Nav>\n\t\t\t\t</Sidenav.Body>\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={logout}\n\t\t\t\t\tstyle={{marginTop: 'auto'}} \n\t\t\t\t\tcircle \n\t\t\t\t\tcolor=\"red\" \n\t\t\t\t\tappearance='subtle' \n\t\t\t\t\ticon={<Icon icon='sign-out' />}\n\t\t\t\t/>\n\t\t\t</Sidenav>\n\t\t</div>\n\t);\n});\n",["85","86","87","88","89","90","91"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Group/index.tsx",["92","93","94","95","96","97","98","99","100","101","102"],"import { useEffect, useState } from 'reactn';\nimport {\n\tButton,\n\tCheckPicker,\n\tControlLabel,\n\tForm,\n\tFormControl,\n\tFormGroup,\n\tHelpBlock,\n\tIcon,\n\tIconButton,\n\tModal,\n\tSelectPicker,\n\tTable,\n} from 'rsuite';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router';\nimport moment from 'moment';\nimport Client from '../../services/client';\nimport { User } from '../../types/user';\nimport { SearchQuery } from '../../types/search_query';\nimport { Group as GroupT } from '../../types/group';\nimport styles from './group.module.scss';\nimport history from '../../history';\nimport { Subject } from '../../types/subject';\n\nconst { Column, HeaderCell, Cell, Pagination } = Table;\n\nexport default function Group(props: any) {\n\tconst { t } = useTranslation();\n\n\tenum Tab {\n\t\tUsers = 'users',\n\t\tSubjects = 'subjects',\n\t\tSettings = 'settings'\n\t}\n\n\tconst tabs = [\n\t\t{\n\t\t\tname: t('Subjects'),\n\t\t\ttab: Tab.Subjects,\n\t\t},\n\t\t{\n\t\t\tname: t('Users'),\n\t\t\ttab: Tab.Users,\n\t\t},\n\t\t{\n\t\t\tname: t('Settings'),\n\t\t\ttab: Tab.Settings,\n\t\t},\n\t];\n\n\tconst { tab } = useParams<any>();\n\tconst [activeTab, setTab] = useState<Tab>(tab);\n\t\n\tconst [group, setGroup] = useState<GroupT | null>(null);\n\t\n\tuseEffect(() => {\n\t\tsetTab(tab || Tab.Subjects);\n\t}, [tab]);\n\t\n\n\tuseEffect(() => {\n\t\tfetchGroup();\n\t}, []);\n\n\tfunction fetchGroup() {\n\t\tClient.Groups.get(props.match.params.id)\n\t\t\t.then((g) => {\n\t\t\t\tsetGroup(g);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<div className={['page', styles.group].join(' ')}>\n\t\t\t<h3>{group?.name}</h3>\n\t\t\t<div className={styles.tabs}>\n\t\t\t\t{tabs.map((tab, i) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={tab.name}\n\t\t\t\t\t\ttabIndex={i}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thistory.push(`/groups/${props.match.params.id}/${tab.tab}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tclassName={[\n\t\t\t\t\t\t\tstyles.tab,\n\t\t\t\t\t\t\ttab.tab === activeTab ? styles.active : '',\n\t\t\t\t\t\t].join(' ')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>{tab.name}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t{(group && activeTab === Tab.Subjects) && <SubjectsTab \n\t\t\t\tsubjects={group.subjects!}\n\t\t\t\tfetchGroup={fetchGroup} \n\t\t\t/>}\n\t\t\t{(group && activeTab === Tab.Users) && <UsersTab \n\t\t\t\tusers={group.users!} \n\t\t\t\tfetchGroup={fetchGroup} \n\t\t\t/>}\n\t\t</div>\n\t);\n}\n\nfunction SubjectsTab(props: {subjects: Array<Subject>, fetchGroup: () => void}) {\n\n\tconst { t } = useTranslation();\n\tconst [createModal, setCreateModal] = useState<boolean>(false);\n\tconst [subject, setSubject] = useState<Subject>({});\n\tconst [confirmArchive, setConfirmArchive] = useState<boolean>(false);\n\tconst [subjectToArchive, setSubjectToArchive] = useState<string>();\n\n\tconst {id} = useParams<any>();\n\n\tfunction addSubject() {\n\t\tif (subject.id) {\n\t\t\tClient.Subjects.update(id, subject.id, subject).then(() => {\n\t\t\t\tprops.fetchGroup();\n\t\t\t\tsetCreateModal(false);\t\n\t\t\t}).catch(err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t} else {\n\t\t\tClient.Subjects.create(id, subject).then(() => {\n\t\t\t\tprops.fetchGroup();\n\t\t\t\tsetCreateModal(false);\n\t\t\t}).catch(err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction archiveSubject() {\n\t\tClient.Subjects.archive(id, subjectToArchive!).then(() => {\n\t\t\tconsole.log('ok');\n\t\t\tprops.fetchGroup();\n\t\t\tsetConfirmArchive(false);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\n\tfunction editSubject(s: Subject) {\n\t\tsetSubject(s);\n\t\tsetCreateModal(true);\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetCreateModal(true);\n\t\t\t\t}}\n\t\t\t\tstyle={{marginBottom: 15}}\n\t\t\t\tappearance=\"primary\"\n\t\t\t>\n\t\t\t\t{t('Add subject')}\n\t\t\t</Button>\n\t\t\t<Table\n\t\t\t\theight={400}\n\t\t\t\tdata={props.subjects}\n\t\t\t>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Name')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"name\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={100}>\n\t\t\t\t\t<HeaderCell>{t('Color')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"color\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={100}>\n\t\t\t\t\t<HeaderCell>{t('Icon')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"icon_url\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>\n\t\t\t\t\t\t{t('Created at')}\n\t\t\t\t\t</HeaderCell>\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t{(rowData: any) =>\n\t\t\t\t\t\t\tmoment(rowData.created_at).format(\n\t\t\t\t\t\t\t\t'MMM Do YYYY HH:mm:ss'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>\n\t\t\t\t\t\t{t('Updated at')}\n\t\t\t\t\t</HeaderCell>\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t{(rowData: any) =>\n\t\t\t\t\t\t\tmoment(rowData.updated_at).format(\n\t\t\t\t\t\t\t\t'MMM Do YYYY HH:mm:ss'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column>\n\t\t\t\t<Column width={150} fixed=\"right\">\n\t\t\t\t\t<HeaderCell>{t('Action')}</HeaderCell>\n\t\t\t\t\t<Cell style={{display: 'flex', alignItems: 'center'}}>\n\t\t\t\t\t\t{(rowData: any) => \n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\tonClick={() => editSubject((rowData as Subject))}\n\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\tappearance='link'\n\t\t\t\t\t\t\t\t>{t('Edit')}\n\t\t\t\t\t\t\t\t</Button> | {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSubjectToArchive(rowData.id);\n\t\t\t\t\t\t\t\t\t\tsetConfirmArchive(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t\tappearance='link'\n\t\t\t\t\t\t\t\t\tcolor='red'\n\t\t\t\t\t\t\t\t>{t('Archive')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</span>}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column>\n\t\t\t</Table>\n\n\t\t\t<Modal show={confirmArchive} close={() => setConfirmArchive(false)} onHide={() => setConfirmArchive(false)} size=\"xs\">\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\ticon=\"remind\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: '#ffb300',\n\t\t\t\t\t\t\tfontSize: 24,\n\t\t\t\t\t\t\tmarginRight: 5\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{t('Are you sure you want to archive this subject?')}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button color='red' onClick={archiveSubject} appearance=\"primary\">\n\t\t\t\t\t\t{t('Archive')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setConfirmArchive(false)} appearance=\"subtle\">\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t\t\n\n\t\t\t<Modal\n\t\t\t\tshow={createModal}\n\t\t\t\tclose={() => setCreateModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateModal(false)}\n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Add subject')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={addSubject}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Name')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tplaceholder={t('Name')} \n\t\t\t\t\t\t\t\tonChange={v => setSubject(s => ({...s, name: v}))}\n\t\t\t\t\t\t\t\tvalue={subject.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Color')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\tname=\"color\" \n\t\t\t\t\t\t\t\tplaceholder={t('Color')} \n\t\t\t\t\t\t\t\tonChange={v => setSubject(s => ({...s, color: v}))}\n\t\t\t\t\t\t\t\tvalue={subject.color}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Icon')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl \n\t\t\t\t\t\t\t\tname=\"icon\" \n\t\t\t\t\t\t\t\tplaceholder={t('Icon')} \n\t\t\t\t\t\t\t\tonChange={v => setSubject(s => ({...s, icon_url: v}))}\n\t\t\t\t\t\t\t\tvalue={subject.icon_url}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={addSubject}\n\t\t\t\t\t\tdisabled={!subject.name}\n\t\t\t\t\t>\n\t\t\t\t\t\t{subject.id ? t('Update') : t('Add subject')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateModal(false)} appearance=\"subtle\">\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n\n\nfunction UsersTab(props: {users: Array<User>, fetchGroup: () => void}) {\n\n\tconst { t } = useTranslation();\n\n\tconst {id} = useParams<any>();\n\t\n\tconst [createModal, setCreateModal] = useState<boolean>(false);\n\tconst [searchedUsers, setUsers] = useState<Array<User>>(new Array<User>());\n\tconst [userIds, setUserIds] = useState<Array<string>>(new Array<string>());\n\n\tfunction addUser() {\n\t\tClient.Groups.addUsers(id, userIds.join(','))\n\t\t\t.then(() => {\n\t\t\t\tprops.fetchGroup();\n\t\t\t\tsetCreateModal(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}\n\n\n\n\tfunction searchUsers(q?: string) {\n\t\tClient.Users.list({ query: q, exclude_group: id })\n\t\t\t.then((users) => {\n\t\t\t\tsetUsers(users);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetUserIds([]);\n\t\t\t\t\tsetCreateModal(true);\n\t\t\t\t}}\n\t\t\t\tstyle={{marginBottom: 15}}\n\t\t\t\tappearance=\"primary\"\n\t\t\t>\n\t\t\t\t{t('Add user')}\n\t\t\t</Button>\n\t\t\t<Table\n\t\t\t\theight={400}\n\t\t\t\tdata={props.users}\n\t\t\t>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Name')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"name\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Login')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"login\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={300}>\n\t\t\t\t\t<HeaderCell>{t('Email')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"email\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={120} fixed=\"right\">\n\t\t\t\t\t<HeaderCell>{t('Action')}</HeaderCell>\n\t\t\t\t\t<Cell>{(rowData: any) => <span>yo</span>}</Cell>\n\t\t\t\t</Column>\n\t\t\t</Table>\n\n\t\t\t<Modal\n\t\t\t\tshow={createModal}\n\t\t\t\tclose={() => setCreateModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateModal(false)}\n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Add users')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={addUser}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Select users')}</ControlLabel>\n\t\t\t\t\t\t\t<CheckPicker\n\t\t\t\t\t\t\t\tdata={searchedUsers.map((u) => ({ label: u.name, value: u.id }))}\n\t\t\t\t\t\t\t\tvalue={userIds}\n\t\t\t\t\t\t\t\tonChange={(v) => setUserIds(v)}\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\tonOpen={searchUsers}\n\t\t\t\t\t\t\t\tonSearch={searchUsers}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={addUser}\n\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Add users')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateModal(false)} appearance=\"subtle\">\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/groups.ts",["103","104"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/Router.tsx",[],["105","106","107","108","109","110","111"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Tasks/index.tsx",["112","113","114","115","116","117","118","119","120","121","122"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Groups/index.tsx",["123"],"import { useEffect } from 'react';\nimport Client from '../../services/client';\nimport GroupTree from '../../views/GroupTree';\n\nexport default function Groups(props: any) {\n\n\tuseEffect(() => {\n\t\tClient.Groups.tree().then(tree => {\n\t\t\tconsole.log(tree);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}, []);\n\t\n\treturn (\n\t\t<div style={{width: 'calc(100% - 300px)'}}>\n\t\t\t<GroupTree />\n\t\t</div>\n\t);\n}",["124","125","126","127","128","129","130"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Users/index.tsx",["131","132","133","134"],"import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useState } from 'reactn';\nimport { Button, ControlLabel, Form, FormControl, FormGroup, HelpBlock, Modal, Table } from 'rsuite';\nimport Client from '../../services/client';\nimport { User } from '../../types/user';\n\nconst { Column, HeaderCell, Cell, Pagination } = Table;\n\nexport default function Users(props: any) {\n\tconst { t } = useTranslation();\n\n\tconst [users, setUsers] = useState<Array<User>>(new Array<User>());\n\tconst [user, setUser] = useState<User>({});\n\tconst [createUserModal, setCreateUserModal] = useState<boolean>(false);\n\t\n\tuseEffect(() => {\n\t\tfetchUsers();\n\t}, []);\n\n\tfunction fetchUsers() {\n\t\tClient.Users.list().then(u => {\n\t\t\tsetUsers(u);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\n\tfunction createUser() {\n\t\tClient.Users.create(user.name!, user.email!, user.login!, user.password).then(id => {\n\t\t\tconsole.log(id);\n\t\t\tfetchUsers();\n\t\t\tsetCreateUserModal(false);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\t\n\treturn (\n\t\t<div className='page'>\n\t\t\t<div className='header-action'>\n\t\t\t\t<h3>{t('Users')}</h3>\n\t\t\t\t<Button onClick={() => setCreateUserModal(true)} appearance=\"primary\">\n\t\t\t\t\t{t('Create user')}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Table\n\t\t\t\theight={400}\n\t\t\t\tdata={users}\n\t\t\t\tonRowClick={data => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Name')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"name\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Login')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"login\" />\n\t\t\t\t</Column>\n\t\t\t\t<Column width={200}>\n\t\t\t\t\t<HeaderCell>{t('Email')}</HeaderCell>\n\t\t\t\t\t<Cell dataKey=\"email\" />\n\t\t\t\t</Column>\n\t\t\t\t{/* <Column width={120} fixed=\"right\">\n\t\t\t\t\t<HeaderCell>Action</HeaderCell>\n\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t{rowData => {\n\t\t\t\t\t\t\tfunction handleAction() {\n\t\t\t\t\t\t\t\talert(`id:${rowData.id}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Column> */}\n\t\t\t</Table>\n\n\t\t\t<Modal\n\t\t\t\tshow={createUserModal}\n\t\t\t\tclose={() => setCreateUserModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateUserModal(false)} \n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Create user')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={createUser}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Name')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={user.name}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, name: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Name')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Login')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tvalue={user.login}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, login: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Login')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HelpBlock>{t('Required')}</HelpBlock>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Email')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tvalue={user.email}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, email: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Email')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Password')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\t\t\tonChange={(v) => setUser(u => ({...u, password: v}))}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder={t('Leave empty for a random password')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={createUser}\n\t\t\t\t\t\tdisabled={!user.name || !user.login}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Create user')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateUserModal(false)} appearance=\"subtle\">{t('Cancel')}</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}",["135","136","137","138","139","140","141"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/index.tsx",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/utils/index.ts",[],["142","143","144","145","146","147","148"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/routes/Login/index.tsx",["149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Button, ControlLabel, Form, FormControl, FormGroup, HelpBlock, Input } from 'rsuite';\nimport { ReactComponent as Logo } from '../../assets/svg/bitcoin.svg';\nimport Client from '../../services/client';\nimport styles from './login.module.scss';\n\nexport default function Setup() {\n\tconst { t } = useTranslation();\n\n\tconst [email, setEmail] = useState<string>('');\n\tconst [password, setPassword] = useState<string>('');\n\n\tfunction authenticateUser() {\n\t\tClient.Admins.authenticate(email, password)\n\t\t\t.then(() => {\n\t\t\t\twindow.location.href = '/';\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\ttoast(t('Incorrect username / password.'), {\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<div className={styles.login}>\n\t\t\t<h1>{t('Login')}</h1>\n\t\t\t<Form style={{marginTop: 25}} onSubmit={authenticateUser}>\n\t\t\t\t<Input onChange={v => setEmail(v)} style={{marginBottom: 15}} placeholder={t('Username')} name=\"name\" type=\"email\" />\n\t\t\t\t<Input onChange={v => setPassword(v)} style={{marginBottom: 15}} placeholder={t('Password')} name=\"password\" type=\"password\" />\n\n\t\t\t\t<Button type=\"submit\" appearance=\"primary\">{t('Login')}</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n}\n","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/client.ts",["163","164"],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/reportWebVitals.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/http.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/components/FilterView/index.tsx",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/views/GroupTree/index.tsx",["165","166","167","168","169"],"import { Ref, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TreeNodeDatum } from 'react-d3-tree/lib/types/common';\nimport Tree from 'react-d3-tree';\nimport { Button, ControlLabel, Dropdown, Form, FormControl, FormGroup, Modal } from 'rsuite';\nimport { createRef } from 'reactn';\nimport { Group } from '../../types/group';\nimport Client from '../../services/client';\nimport { convertGroupTreeToD3Tree } from '../../utils';\nimport styles from './grouptree.module.scss';\nimport history from '../../history';\n\nexport default function GroupTree(props: {chooser?: boolean, onGroupChoose?: (g: Group) => any}) {\n\tconst [groups, setGroups] = useState<Group | null>(null);\n\tconst [node, setNode] = useState<TreeNodeDatum | null>(null);\n\tconst [group, setGroup] = useState<Group>({});\n\tconst [createGroupModal, setCreateGroupModal] = useState<boolean>(false);\n\tconst { t } = useTranslation();\n\n\tuseEffect(() => {\n\t\tfetchTree();\n\t}, []);\n\n\tfunction fetchTree() {\n\t\tClient.Groups.tree().then(groups => {\n\t\t\tsetGroups(groups);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n    \n\tfunction createGroup() {\n\t\tClient.Groups.create(group.parent_id!, group).then(() => {\n\t\t\tfetchTree();\n\t\t\tsetCreateGroupModal(false);\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\n\tfunction removeGroup(id: string) {\n\t\tClient.Groups.delete(id).then(() => {\n\t\t\tfetchTree();\n\t\t}).catch(err => {\n\t\t\tif (err) throw err;\n\t\t});\n\t}\n\n\tconst foreignObjectProps = { width: props.chooser ? 100 : 200, height: props.chooser ? 100 : 200, x: 30, y: -20 };\n\n\tconst renderForeignObjectNode = (props: any) => {\n\t\tconst r = createRef<any>();\n\n\t\tconst Display = (props: {\n\t\t\tname: string, \n\t\t\tslug: string, \n\t\t\tonClick?: any,\n\t\t}) => <div role='button' onClick={props.onClick}>\n\t\t\t<h4 style={{margin: 0}}>{props.name}</h4>\n\t\t\t<p \n\t\t\t\tstyle={{margin: 0, fontSize: 12, width: 350}}\n\t\t\t>\n\t\t\t\t{`${t('slug')}: ${props.slug}`}\n\t\t\t</p>\n\t\t</div>;\n\n\t\tDisplay.defaultProps = {\n\t\t\tonClick: null,\n\t\t};\n\n\t\tfunction onChooseGroup(e: any) {\n\t\t\tif (props.chooser) {\n\t\t\t\tprops.onGroupChoose({\n\t\t\t\t\tname: props.nodeDatum.name, \n\t\t\t\t\tslug: props.nodeDatum.attributes.slug,\n\t\t\t\t\tid: props.nodeDatum.attributes.id\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tr.current.handleClick(e);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<g onClick={() => setNode(props.nodeDatum)}>\n\t\t\t\t\t<circle onClick={onChooseGroup} style={{fill: '#505fb0'}} r={8} />\n\t\t\t\t\t<foreignObject {...props.foreignObjectProps}>\n\t\t\t\t\t\t{!props.chooser && <Dropdown\n\t\t\t\t\t\t\tref={r}\n\t\t\t\t\t\t\tclassName={styles.dropdown}\n\t\t\t\t\t\t\trenderTitle={() => <Display\n\t\t\t\t\t\t\t\tname={props.nodeDatum.name} \n\t\t\t\t\t\t\t\tslug={props.nodeDatum.attributes.slug} \n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\ttitle=\"edit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Dropdown.Item onSelect={() => history.push(`/groups/${props.nodeDatum.attributes.id}`)}>{t('Open')}</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item onSelect={\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\tconsole.log(props.nodeDatum.attributes);\n\t\t\t\t\t\t\t\t\tsetGroup(g => ({...g, parent_id: props.nodeDatum.attributes.id}));\n\t\t\t\t\t\t\t\t\tsetCreateGroupModal(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>{t('Add subgroup')}\n\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t<Dropdown.Item onSelect={() => removeGroup(props.nodeDatum.attributes.id)}>{t('Remove')}</Dropdown.Item>\n\t\t\t\t\t\t</Dropdown>}\n\t\t\t\t\t\t{props.chooser && (\n\t\t\t\t\t\t\t<Display\n\t\t\t\t\t\t\t\tonClick={onChooseGroup}\n\t\t\t\t\t\t\t\tname={props.nodeDatum.name}\n\t\t\t\t\t\t\t\tslug={props.nodeDatum.attributes.slug} \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</foreignObject>\n\t\t\t\t</g>\n\t\t\t</>\n\t\t);\n\t};\n\t\n\treturn (\n\t\t<div\n\t\t\tstyle={{ width: '100%', height: 800 }}\n\t\t>\n\t\t\t{groups && <Tree\n\t\t\t\ttranslate={{\n\t\t\t\t\tx: 300,\n\t\t\t\t\ty: 100\n\t\t\t\t}}\n\t\t\t\tscaleExtent={{\n\t\t\t\t\tmin: 0.5,\n\t\t\t\t\tmax: 2\n\t\t\t\t}}\n\t\t\t\tseparation={{\n\t\t\t\t\tnonSiblings: 2,\n\t\t\t\t\tsiblings: 1\n\t\t\t\t}}\n\t\t\t\tcollapsible={false}\n\t\t\t\torientation=\"vertical\"\n\t\t\t\trenderCustomNodeElement={(rd3tProps) =>\n\t\t\t\t\trenderForeignObjectNode({ \n\t\t\t\t\t\t...rd3tProps, \n\t\t\t\t\t\tforeignObjectProps, \n\t\t\t\t\t\tchooser: props.chooser,\n\t\t\t\t\t\tonGroupChoose: props.onGroupChoose\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tdata={convertGroupTreeToD3Tree(groups!)}\n\t\t\t/>}\n\t\t\t<Modal\n\t\t\t\tshow={createGroupModal}\n\t\t\t\tclose={() => setCreateGroupModal(false)}\n\t\t\t\twidth={500}\n\t\t\t\tonHide={() => setCreateGroupModal(false)} \n\t\t\t>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>{t('Create group')}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form fluid onSubmit={createGroup}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>{t('Name')}</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={group.name}\n\t\t\t\t\t\t\t\tonChange={(v) => setGroup(g => ({...g, name: v}))}\n\t\t\t\t\t\t\t\tplaceholder={t('Name')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tappearance=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tonClick={createGroup}\n\t\t\t\t\t\tdisabled={!group.name}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Create group')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setCreateGroupModal(false)} appearance=\"subtle\">{t('Cancel')}</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n\nGroupTree.defaultProps = {\n\tchooser: false,\n\tonGroupChoose: null\n};","/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/subjects.ts",[],"/home/aureleoules/go/src/github.com/aureleoules/epitaf/admin_ui/src/services/tasks.ts",[],{"ruleId":"170","severity":1,"message":"171","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"174","severity":1,"message":"171","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"175","severity":1,"message":"176","line":50,"column":5,"nodeType":"177","endLine":50,"endColumn":7,"suggestions":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"170","severity":1,"message":"193","line":11,"column":2,"nodeType":"172","messageId":"173","endLine":11,"endColumn":12},{"ruleId":"174","severity":1,"message":"193","line":11,"column":2,"nodeType":"172","messageId":"173","endLine":11,"endColumn":12},{"ruleId":"170","severity":1,"message":"194","line":13,"column":2,"nodeType":"172","messageId":"173","endLine":13,"endColumn":14},{"ruleId":"174","severity":1,"message":"194","line":13,"column":2,"nodeType":"172","messageId":"173","endLine":13,"endColumn":14},{"ruleId":"170","severity":1,"message":"195","line":21,"column":10,"nodeType":"172","messageId":"173","endLine":21,"endColumn":21},{"ruleId":"174","severity":1,"message":"195","line":21,"column":10,"nodeType":"172","messageId":"173","endLine":21,"endColumn":21},{"ruleId":"170","severity":1,"message":"196","line":27,"column":35,"nodeType":"172","messageId":"173","endLine":27,"endColumn":45},{"ruleId":"174","severity":1,"message":"196","line":27,"column":35,"nodeType":"172","messageId":"173","endLine":27,"endColumn":45},{"ruleId":"175","severity":1,"message":"197","line":60,"column":5,"nodeType":"177","endLine":60,"endColumn":10,"suggestions":"198"},{"ruleId":"175","severity":1,"message":"199","line":65,"column":5,"nodeType":"177","endLine":65,"endColumn":7,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":141,"column":4,"nodeType":"203","messageId":"204","endLine":141,"endColumn":15},{"ruleId":"170","severity":1,"message":"205","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":17},{"ruleId":"174","severity":1,"message":"205","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":17},{"ruleId":"179","replacedBy":"206"},{"ruleId":"181","replacedBy":"207"},{"ruleId":"183","replacedBy":"208"},{"ruleId":"185","replacedBy":"209"},{"ruleId":"187","replacedBy":"210"},{"ruleId":"189","replacedBy":"211"},{"ruleId":"191","replacedBy":"212"},{"ruleId":"170","severity":1,"message":"213","line":6,"column":2,"nodeType":"172","messageId":"173","endLine":6,"endColumn":13},{"ruleId":"174","severity":1,"message":"213","line":6,"column":2,"nodeType":"172","messageId":"173","endLine":6,"endColumn":13},{"ruleId":"170","severity":1,"message":"214","line":8,"column":2,"nodeType":"172","messageId":"173","endLine":8,"endColumn":12},{"ruleId":"174","severity":1,"message":"214","line":8,"column":2,"nodeType":"172","messageId":"173","endLine":8,"endColumn":12},{"ruleId":"170","severity":1,"message":"215","line":14,"column":2,"nodeType":"172","messageId":"173","endLine":14,"endColumn":6},{"ruleId":"174","severity":1,"message":"215","line":14,"column":2,"nodeType":"172","messageId":"173","endLine":14,"endColumn":6},{"ruleId":"170","severity":1,"message":"193","line":15,"column":2,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"174","severity":1,"message":"193","line":15,"column":2,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"170","severity":1,"message":"196","line":28,"column":35,"nodeType":"172","messageId":"173","endLine":28,"endColumn":45},{"ruleId":"174","severity":1,"message":"196","line":28,"column":35,"nodeType":"172","messageId":"173","endLine":28,"endColumn":45},{"ruleId":"201","severity":1,"message":"202","line":44,"column":4,"nodeType":"203","messageId":"204","endLine":44,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":9,"column":4,"nodeType":"203","messageId":"204","endLine":9,"endColumn":15},{"ruleId":"179","replacedBy":"216"},{"ruleId":"181","replacedBy":"217"},{"ruleId":"183","replacedBy":"218"},{"ruleId":"185","replacedBy":"219"},{"ruleId":"187","replacedBy":"220"},{"ruleId":"189","replacedBy":"221"},{"ruleId":"191","replacedBy":"222"},{"ruleId":"170","severity":1,"message":"196","line":8,"column":35,"nodeType":"172","messageId":"173","endLine":8,"endColumn":45},{"ruleId":"174","severity":1,"message":"196","line":8,"column":35,"nodeType":"172","messageId":"173","endLine":8,"endColumn":45},{"ruleId":"201","severity":1,"message":"202","line":31,"column":4,"nodeType":"203","messageId":"204","endLine":31,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":51,"column":6,"nodeType":"203","messageId":"204","endLine":51,"endColumn":17},{"ruleId":"179","replacedBy":"223"},{"ruleId":"181","replacedBy":"224"},{"ruleId":"183","replacedBy":"225"},{"ruleId":"185","replacedBy":"226"},{"ruleId":"187","replacedBy":"227"},{"ruleId":"189","replacedBy":"228"},{"ruleId":"191","replacedBy":"229"},{"ruleId":"179","replacedBy":"230"},{"ruleId":"181","replacedBy":"231"},{"ruleId":"183","replacedBy":"232"},{"ruleId":"185","replacedBy":"233"},{"ruleId":"187","replacedBy":"234"},{"ruleId":"189","replacedBy":"235"},{"ruleId":"191","replacedBy":"236"},{"ruleId":"170","severity":1,"message":"237","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":23},{"ruleId":"174","severity":1,"message":"237","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":23},{"ruleId":"170","severity":1,"message":"238","line":3,"column":17,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"174","severity":1,"message":"238","line":3,"column":17,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"170","severity":1,"message":"239","line":5,"column":18,"nodeType":"172","messageId":"173","endLine":5,"endColumn":30},{"ruleId":"174","severity":1,"message":"239","line":5,"column":18,"nodeType":"172","messageId":"173","endLine":5,"endColumn":30},{"ruleId":"170","severity":1,"message":"240","line":5,"column":38,"nodeType":"172","messageId":"173","endLine":5,"endColumn":49},{"ruleId":"174","severity":1,"message":"240","line":5,"column":38,"nodeType":"172","messageId":"173","endLine":5,"endColumn":49},{"ruleId":"170","severity":1,"message":"241","line":5,"column":51,"nodeType":"172","messageId":"173","endLine":5,"endColumn":60},{"ruleId":"174","severity":1,"message":"241","line":5,"column":51,"nodeType":"172","messageId":"173","endLine":5,"endColumn":60},{"ruleId":"170","severity":1,"message":"242","line":5,"column":62,"nodeType":"172","messageId":"173","endLine":5,"endColumn":71},{"ruleId":"174","severity":1,"message":"242","line":5,"column":62,"nodeType":"172","messageId":"173","endLine":5,"endColumn":71},{"ruleId":"170","severity":1,"message":"243","line":6,"column":28,"nodeType":"172","messageId":"173","endLine":6,"endColumn":32},{"ruleId":"174","severity":1,"message":"243","line":6,"column":28,"nodeType":"172","messageId":"173","endLine":6,"endColumn":32},{"ruleId":"244","severity":2,"message":"245","line":4,"column":19,"nodeType":"246","endLine":4,"endColumn":28},{"ruleId":"244","severity":2,"message":"247","line":5,"column":22,"nodeType":"246","endLine":5,"endColumn":34},{"ruleId":"170","severity":1,"message":"248","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"248","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"249","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":13},{"ruleId":"174","severity":1,"message":"249","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":13},{"ruleId":"201","severity":1,"message":"202","line":100,"column":10,"nodeType":"203","messageId":"204","endLine":100,"endColumn":21},"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["250"],"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"lines-around-directive",["253"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'IconButton' is defined but never used.","'SelectPicker' is defined but never used.","'SearchQuery' is defined but never used.","'Pagination' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Tab.Subjects'. Either include it or remove the dependency array.",["254"],"React Hook useEffect has a missing dependency: 'fetchGroup'. Either include it or remove the dependency array.",["255"],"no-console","Unexpected console statement.","MemberExpression","unexpected","'Subject' is defined but never used.",["251"],["252"],["253"],[],[],[],[],"'CheckPicker' is defined but never used.","'DatePicker' is defined but never used.","'Icon' is defined but never used.",["251"],["252"],["253"],[],[],[],[],["251"],["252"],["253"],[],[],[],[],["251"],["252"],["253"],[],[],[],[],"'useRef' is defined but never used.","'ToastContainer' is defined but never used.","'ControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'HelpBlock' is defined but never used.","'Logo' is defined but never used.","import/extensions","Missing file extension for \"./tasks\"","Literal","Missing file extension for \"./subjects\"","'Ref' is defined but never used.","'node' is assigned a value but never used.",{"desc":"256","fix":"257"},"no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [setUser]",{"range":"262","text":"263"},"Update the dependencies array to be: [Tab.Subjects, tab]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetchGroup]",{"range":"266","text":"267"},[1193,1195],"[setUser]",[1245,1250],"[Tab.Subjects, tab]",[1295,1297],"[fetchGroup]"]